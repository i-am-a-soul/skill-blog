import{_ as e,o as c,c as o,e as d}from"./app-M6OZmubj.js";const i={},l=d('<h1 id="格式化上下文" tabindex="-1"><a class="header-anchor" href="#格式化上下文" aria-hidden="true">#</a> 格式化上下文</h1><h2 id="块级格式化上下文-block-formatting-context-bfc" tabindex="-1"><a class="header-anchor" href="#块级格式化上下文-block-formatting-context-bfc" aria-hidden="true">#</a> 块级格式化上下文（<code>Block Formatting Context</code>，<code>BFC</code>）</h2><h3 id="bfc是什么" tabindex="-1"><a class="header-anchor" href="#bfc是什么" aria-hidden="true">#</a> <code>BFC</code>是什么</h3><p><code>BFC</code>区域是一个独立的渲染容器，容器内的元素和<code>BFC</code>区域外的元素之间不会有任何干扰。</p><h3 id="什么样的元素会创建一个bfc" tabindex="-1"><a class="header-anchor" href="#什么样的元素会创建一个bfc" aria-hidden="true">#</a> 什么样的元素会创建一个<code>BFC</code></h3><ul><li>浮动元素（元素的<code>float</code>不是<code>none</code>）</li><li>绝对定位元素和固定定位元素</li><li>内联块（元素具有<code>display: inline-block</code>属性）</li><li>具有<code>overflow</code>且值不是<code>visible</code>的块元素</li><li>根元素或其他包含根元素的元素</li><li>表格单元格（元素具有<code>display: table-cell</code>，<code>HTML</code>表格单元格默认属性）</li><li>表格标题（元素具有<code>display: table-caption</code>，<code>HTML</code>表格标题默认属性）</li><li>含有样式属性<code>display: flow-root</code>的元素</li><li>含有样式属性<code>column-span: all</code>的元素</li><li>Flex items (direct children of the element with <code>display: flex</code> or <code>inline-flex</code>) if they are neither flex nor grid nor table containers themselves.</li><li>Grid items (direct children of the element with <code>display: grid</code> or <code>inline-grid</code>) if they are neither flex nor grid nor table containers themselves.</li></ul><h3 id="bfc决定了什么" tabindex="-1"><a class="header-anchor" href="#bfc决定了什么" aria-hidden="true">#</a> <code>BFC</code>决定了什么</h3><ul><li>内部的<code>block box</code>将会独占宽度，且在垂直方向上一个接一个排列</li><li><code>block box</code>在垂直方向上的间距由<code>margin</code>属性决定，但是同一个<code>BFC</code>的两个相邻<code>block box</code>的<code>margin</code>会出现边距折叠现象</li><li>每个<code>block box</code>在水平方向上的左边缘与<code>BFC</code>的左边缘相对齐，即使存在浮动也是如此</li><li><code>BFC</code>区域不会与浮动元素重叠，而是会依次排列</li><li>浮动元素的高度也参与<code>BFC</code>的高度计算</li></ul><h2 id="内联格式化上下文-inline-formatting-context-ifc" tabindex="-1"><a class="header-anchor" href="#内联格式化上下文-inline-formatting-context-ifc" aria-hidden="true">#</a> 内联格式化上下文（<code>Inline Formatting Context</code>，<code>IFC</code>）</h2><h3 id="ifc的形成" tabindex="-1"><a class="header-anchor" href="#ifc的形成" aria-hidden="true">#</a> <code>IFC</code>的形成</h3><p>当多个内联（块级）元素排列在一起的时候就会形成一个<code>IFC</code>，这些内联（块级）元素之间不能穿插有块级元素，否则会被切割成多个<code>IFC</code>。</p><h3 id="ifc的影响" tabindex="-1"><a class="header-anchor" href="#ifc的影响" aria-hidden="true">#</a> <code>IFC</code>的影响</h3><ul><li>一个<code>IFC</code>内的元素都是水平排列的</li><li>横向的<code>margin</code>、<code>border</code>、<code>padding</code>属性对于这些元素都是有效的</li><li>垂直方向可以调整对其方式</li></ul>',13),a=[l];function r(t,n){return c(),o("div",null,a)}const s=e(i,[["render",r],["__file","格式化上下文.html.vue"]]);export{s as default};
