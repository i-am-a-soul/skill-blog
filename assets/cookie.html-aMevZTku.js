import{_ as i,r as a,o as r,c as l,a as e,b as c,d,e as n}from"./app-M6OZmubj.js";const t="/skill-blog/img/0080.png",s="/skill-blog/img/0020.jpg",h={},k=n('<h1 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie" aria-hidden="true">#</a> <code>cookie</code></h1><h2 id="种类" tabindex="-1"><a class="header-anchor" href="#种类" aria-hidden="true">#</a> 种类</h2><ul><li><code>session cookie</code>，这种<code>cookie</code>会随着用户关闭浏览器而清除，不会标记任何过期时间<code>Expires</code>或最大时限<code>Max-Age</code>。</li><li><code>permanent cookie</code>，与<code>session cookie</code>相反，会在用户关闭浏览器之后被浏览器持久化存储。</li></ul><h2 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点" aria-hidden="true">#</a> 缺点</h2><ul><li><code>cookie</code>的大小是有限的，不同浏览器的限制会有所不同，早期浏览器对<code>cookie</code>的限制大约在4KB左右，这就意味着客户端能存取的状态信息是非常有限的。</li><li><code>cookie</code>会消耗网络带宽，因为<code>cookie</code>是跟随域名和路径设定的，只要域名和路径相同，对于某些不需要<code>cookie</code>的请求也会带上<code>cookie</code>。</li><li><code>cookie</code>是可以被禁用的，如果浏览器设置了安全策略禁止使用<code>cookie</code>，那么服务器端设置<code>cookie</code>将会失败。</li><li><code>cookie</code>可能会被窃取或篡改。</li></ul><h2 id="带-和不带-的区别" tabindex="-1"><a class="header-anchor" href="#带-和不带-的区别" aria-hidden="true">#</a> 带<code>.</code>和不带<code>.</code>的区别</h2><p><img src="'+t+'" alt=""></p><p>带<code>.</code>：父<code>domain</code>和子<code>domain</code>都可以访问</p><p>不带<code>.</code>：只有<code>domain</code>一样才可以访问</p><h2 id="安全" tabindex="-1"><a class="header-anchor" href="#安全" aria-hidden="true">#</a> 安全</h2><p>在请求报文和响应报文头部各有一个与<code>cookie</code>相关的字段。请求报文中为<code>cookie</code>，响应报文中为<code>set-cookie</code>。</p><p><img src="'+s+'" alt=""></p><p>服务器端可以对<code>cookie</code>进行一些关键配置，以保障<code>cookie</code>的使用安全：</p><ul><li><code>HttpOnly cookie</code>：在浏览器端，<code>JavaScript</code>没有读<code>cookie</code>的权限。</li><li><code>Secure cookie</code>：只有在特定安全通道（通常指<code>HTTPS</code>）下，传输链路的请求中才会自动加入相关<code>cookie</code>。</li><li><code>SameSite cookie</code>：在跨站情况下，相关<code>cookie</code>无法被请求携带，这里主要是为了防止<code>CSRF</code>攻击。</li></ul><p>参考资料：</p>',15),p={href:"https://alexzhong22c.github.io/2020/05/22/cross-origin-cross-site/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://www.ruanyifeng.com/blog/2019/09/cookie-samesite.html",target:"_blank",rel:"noopener noreferrer"};function m(u,f){const o=a("ExternalLinkIcon");return r(),l("div",null,[k,e("ul",null,[e("li",null,[e("a",p,[c("跨域和跨站的基本概念"),d(o)])]),e("li",null,[e("a",_,[c("Cookie 的 SameSite 属性"),d(o)])])])])}const x=i(h,[["render",m],["__file","cookie.html.vue"]]);export{x as default};
