import{_ as e,o as a,c as d,e as c}from"./app-M6OZmubj.js";const o="/skill-blog/img/0106.jpg",r={},h=c('<h1 id="性能监控指标" tabindex="-1"><a class="header-anchor" href="#性能监控指标" aria-hidden="true">#</a> 性能监控指标</h1><h2 id="首次绘制时间" tabindex="-1"><a class="header-anchor" href="#首次绘制时间" aria-hidden="true">#</a> 首次绘制时间</h2><p>对于应用界面，首次出现视觉上不同于跳转之前内容的时间点，或者说是页面发生第一次绘制的时间点。</p><p><code>FP</code>（<code>First Paint</code>）为首次渲染的时间点，在性能统计指标中，从用户开始访问<code>Web</code>页面的时间点到<code>FP</code>的时间点这段时间可以被视为<strong>白屏时间</strong>，也就是说在用户访问<code>Web</code>页面的过程中，FP时间点之前，用户看到的都是没有任何内容的白色屏幕，用户在这个阶段感知不到任何有效的工作在进行。</p><h2 id="首次有内容绘制时间" tabindex="-1"><a class="header-anchor" href="#首次有内容绘制时间" aria-hidden="true">#</a> 首次有内容绘制时间</h2><p>指浏览器完成渲染<code>DOM</code>中第一部分内容（可能是文本、图像或其他任何元素）的时间点，此时用户应该在视觉上有直观的感受。</p><p><code>FCP</code>（<code>First Contentful Paint</code>）为首次有内容渲染的时间点，在性能统计指标中，从用户开始访问<code>Web</code>页面的时间点到<code>FCP</code>的时间点这段时间可以被视为<strong>无内容时间</strong>，也就是说在用户访问<code>Web</code>网页的过程中，<code>FCP</code>时间点之前，用户看到的都是没有任何实际内容的屏幕，用户在这个阶段获取不到任何有用的信息。</p><h2 id="首次有意义绘制时间" tabindex="-1"><a class="header-anchor" href="#首次有意义绘制时间" aria-hidden="true">#</a> 首次有意义绘制时间</h2><p>指页面关键元素的渲染时间。这个概念并没有标准化定义，因为关键元素可以由开发者自行定义——究竟什么是“有意义”的内容，只有开发者或产品经理自己了解。</p><h2 id="首屏时间" tabindex="-1"><a class="header-anchor" href="#首屏时间" aria-hidden="true">#</a> 首屏时间</h2><p>对于所有网页应用，这是一个非常重要的指标。用大白话来说，就是进入页面之后，应用渲染完成整个手机屏幕（未滚动之前）内容的时间。需要注意的是，业界对于这个指标其实没有确切的定论，比如，这个时间是否包含手机屏幕内图片的渲染完成时间。</p><h2 id="用户可交互时间" tabindex="-1"><a class="header-anchor" href="#用户可交互时间" aria-hidden="true">#</a> 用户可交互时间</h2><p>指用户可以与应用进行交互的时间。一般来讲，我们认为是<code>DOMReady</code>的时间，因为我们通常会在这时绑定事件操作。如果页面中涉及交互的脚本没有下载完成，那么当然没有达到所谓的用户可交互时间。</p><h2 id="总下载时间" tabindex="-1"><a class="header-anchor" href="#总下载时间" aria-hidden="true">#</a> 总下载时间</h2><p>页面所有资源加载完成所需要的时间。一般可以统计<code>window.onload</code>时间，这样可以统计出同步加载的资源全部加载完的耗时。如果页面中存在较多异步渲染，那么可以将异步渲染全部完成的时间作为总下载时间。</p><h2 id="自定义指标" tabindex="-1"><a class="header-anchor" href="#自定义指标" aria-hidden="true">#</a> 自定义指标</h2><p>由于应用特点不同，所以我们可以根据需求自定义时间。比如，一个类似<code>Instagram</code>的页面由图片瀑布流组成， 那么我们可能非常关心屏幕中第一排图片渲染完成的时间。</p><p><img src="'+o+'" alt=""></p>',18),t=[h];function i(n,s){return a(),d("div",null,t)}const _=e(r,[["render",i],["__file","性能监控指标.html.vue"]]);export{_ as default};
