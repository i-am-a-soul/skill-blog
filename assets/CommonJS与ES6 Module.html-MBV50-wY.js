import{_ as e,o,c,e as d}from"./app-M6OZmubj.js";const l={},m=d('<h1 id="commonjs与es6-module" tabindex="-1"><a class="header-anchor" href="#commonjs与es6-module" aria-hidden="true">#</a> <code>CommonJS</code>与<code>ES6 Module</code></h1><p><code>CommonJS</code>与<code>ES6 Module</code>最本质的区别在于<code>CommonJS</code>对模块依赖的解决是“动态的”（即模块依赖关系的建立发生在代码运行阶段），而<code>ES6 Module</code>是”静态的“（即模块依赖关系的建立发生在代码编译阶段）。</p><p>在导入一个模块时，对于<code>CommonJS</code>来说获取的是一份导出值的拷贝，而在<code>ES6 Module</code>中则是值的动态映射，并且这个映射是只读的。</p><p>当我们<code>require</code>一个模块时会有两种情况：</p><ul><li><code>require</code>的模块是第一次被加载。这时会首先执行该模块，然后导出内容。</li><li><code>require</code>的模块曾被加载过。这时该模块的代码不会再次执行，而是直接导出上次执行后得到的结果。</li></ul><p><code>ES6 Module</code>会自动采用严格模式。</p>',6),n=[m];function r(t,s){return o(),c("div",null,n)}const a=e(l,[["render",r],["__file","CommonJS与ES6 Module.html.vue"]]);export{a as default};
