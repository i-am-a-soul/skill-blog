import{_ as d,o as t,c as e,e as o}from"./app-M6OZmubj.js";const c="/skill-blog/img/0017.png",i="/skill-blog/img/0018.png",a="/skill-blog/img/0045.png",r="/skill-blog/img/0070.png",l={},h=o('<h1 id="知识点" tabindex="-1"><a class="header-anchor" href="#知识点" aria-hidden="true">#</a> 知识点</h1><h2 id="强缓存与协商缓存" tabindex="-1"><a class="header-anchor" href="#强缓存与协商缓存" aria-hidden="true">#</a> 强缓存与协商缓存</h2><p>强缓存：根据过期时间决定使用本地缓存还是请求新资源。</p><p>协商缓存：每次都会发出请求，经过服务器对比后决定采用本地缓存还是新资源。</p><p><code>no-cache</code>：并非禁用缓存，而是需要先与服务器确认返回的响应是否发生了变化，如果资源未发生变化，则可使用缓存副本从而避免下载。</p><p><code>no-store</code>：是真正意义上的禁止缓存，禁止浏览器以及所有中间缓存存储任何版本的返回响应。每次用户都会向服务器发送请求，并下载完整的响应。</p><p><img src="'+c+'" alt=""></p><p><code>Cache-Control</code>的优先级高于<code>Expires</code>。</p><p><img src="'+i+'" alt=""></p><table><thead><tr><th>浏览器相关操作</th><th>Expires/Cache-Control</th><th>Last-Modified/Etag</th></tr></thead><tbody><tr><td>在地址栏中按回车键</td><td>有效</td><td>有效</td></tr><tr><td>页面跳转</td><td>有效</td><td>有效</td></tr><tr><td>新开窗口</td><td>有效</td><td>有效</td></tr><tr><td>前进、后退</td><td>有效</td><td>有效</td></tr><tr><td>刷新</td><td>无效</td><td>有效</td></tr><tr><td>强制刷新</td><td>无效</td><td>无效</td></tr></tbody></table><h2 id="url" tabindex="-1"><a class="header-anchor" href="#url" aria-hidden="true">#</a> <code>URL</code></h2><p><img src="'+a+'" alt=""></p><h2 id="请求参数" tabindex="-1"><a class="header-anchor" href="#请求参数" aria-hidden="true">#</a> 请求参数</h2><p><code>URL</code>中的请求参数以“<code>?</code>”开头，多个参数间以“<code>&amp;</code>”相隔。这种向服务器端传参的方式至少有以下<code>3</code>个缺陷：</p><ul><li>增加了<code>URL</code>长度。不同浏览器对<code>URL</code>都有长度限制，所以它只适合传少量数据。</li><li>参数为明文。把参数直接放在<code>URL</code>上，任何一个用户都可以直接查看所携带的信息，这样做几乎没有安全性可言。所以一些重要的涉及安全的操作不会以这种方式传递参数，而是通过加密放入请求体中。</li><li>不能传输复杂的数据。地址栏只能传递字符串、布尔值、数字这些简单的参数，复杂的<code>JSON</code>对象或数组不能直接传输。</li></ul><h2 id="http-2" tabindex="-1"><a class="header-anchor" href="#http-2" aria-hidden="true">#</a> <code>HTTP/2</code></h2><ul><li>多路复用</li><li>压缩</li><li>支持<code>TLS</code></li><li>应用层协议协商</li><li>服务器端推送</li><li>流控制</li></ul><h2 id="origin" tabindex="-1"><a class="header-anchor" href="#origin" aria-hidden="true">#</a> <code>Origin</code></h2><p><img src="'+r+'" alt=""></p><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><ul><li><code>HTTP</code>协议的默认端口是<code>80</code>，<code>HTTPS</code>协议的默认端口是<code>443</code>。</li></ul>',21),n=[h];function s(p,_){return t(),e("div",null,n)}const u=d(l,[["render",s],["__file","知识点.html.vue"]]);export{u as default};
