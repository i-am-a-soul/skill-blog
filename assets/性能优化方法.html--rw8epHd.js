import{_ as l,r,o as c,c as o,a as e,b as i,d,e as h}from"./app-M6OZmubj.js";const n={},t=h('<h1 id="性能优化方法" tabindex="-1"><a class="header-anchor" href="#性能优化方法" aria-hidden="true">#</a> 性能优化方法</h1><h2 id="http请求优化" tabindex="-1"><a class="header-anchor" href="#http请求优化" aria-hidden="true">#</a> <code>HTTP</code>请求优化</h2><h3 id="减少请求数" tabindex="-1"><a class="header-anchor" href="#减少请求数" aria-hidden="true">#</a> 减少请求数</h3><ul><li><p>从客户端来说，要取消那些重复的请求，不应该在短时间内多次发送重复的请求来获取资源，而应在前端抽象或者缓存</p></li><li><p>从<code>API</code>层面来说，对于某些请求我们可以要求服务器端返回冗余数据</p></li><li><p><code>url-loader</code></p></li><li><p>雪碧图或字体图标</p></li><li><p>减少重定向</p></li></ul><h3 id="缓存数据" tabindex="-1"><a class="header-anchor" href="#缓存数据" aria-hidden="true">#</a> 缓存数据</h3><ul><li><code>localStorage</code></li><li>分离<code>vendor</code>代码</li></ul><h3 id="减少传输数据量" tabindex="-1"><a class="header-anchor" href="#减少传输数据量" aria-hidden="true">#</a> 减少传输数据量</h3><ul><li><p><code>gzip</code>压缩（需要服务端启用，同时浏览器支持）</p></li><li><p>压缩<code>HTML</code>文件</p></li><li><p><code>tree shaking</code></p></li><li><p>压缩<code>CSS</code>文件</p></li><li><p>压缩<code>JS</code>文件</p></li><li><p>分离公共代码</p></li><li><p>压缩图片文件</p></li></ul><h3 id="优化网络链路" tabindex="-1"><a class="header-anchor" href="#优化网络链路" aria-hidden="true">#</a> 优化网络链路</h3><ul><li><p>减少域名。减少网页中域名的使用，就可以减少域名解析的过程所耗费的时间</p></li><li><p>使用<code>CDN</code></p></li></ul><h2 id="代码优化" tabindex="-1"><a class="header-anchor" href="#代码优化" aria-hidden="true">#</a> 代码优化</h2><h3 id="html" tabindex="-1"><a class="header-anchor" href="#html" aria-hidden="true">#</a> <code>HTML</code></h3><ul><li>使用<code>DocumentFragment</code></li><li><code>DNS Prefecth</code></li><li><code>defer</code>与<code>async</code></li><li>虚拟列表</li></ul><h3 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> <code>CSS</code></h3><ul><li>减少重新布局与重新绘制</li><li>优化选择器</li></ul><h3 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> <code>JavaScript</code></h3><ul><li>防抖与节流</li><li>懒加载与预加载</li><li>改进算法</li><li><code>Web Worker</code></li></ul><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>',18),s={href:"https://segmentfault.com/a/1190000022205291",target:"_blank",rel:"noopener noreferrer"},p={href:"https://juejin.cn/post/6844903657318645767#heading-4",target:"_blank",rel:"noopener noreferrer"};function u(_,f){const a=r("ExternalLinkIcon");return c(),o("div",null,[t,e("ul",null,[e("li",null,[e("a",s,[i("前端性能优化 24 条建议"),d(a)])]),e("li",null,[e("a",p,[i("前端性能优化之雅虎35条军规"),d(a)])])])])}const b=l(n,[["render",u],["__file","性能优化方法.html.vue"]]);export{b as default};
